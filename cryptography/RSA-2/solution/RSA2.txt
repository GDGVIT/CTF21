flag: dsc{t0-m355-w1th-m4th-t4k35-4-l0t-0f-sp1n3}
hex(flag): 6473637B74302D6D3335352D773174682D6D3474682D74346B33352D342D6C30742D30662D7370316E337D
decimal(hex(flag)): 14061500589727237715723597570826081039597762758283503070252061800455951899778424597542833650554379318141

e = 3

p
q = 2357111317192329313741434753596167717379838997101103107109113127131137139149151157163167173179181191193197199211223227229233239241251257263269271277281283293307311313317331337347349353359367373379383389397401409419421431433439443449457461463467479487491499503509521523541547557563569571577587593599601607613617619631641643647653659661673677683691701709719727733739743751757761769773787797809811821823827829839853857859863877881883887907911919929937941947953967971977983991997100910131019102110311033

n = p * q
n = 23571113171923293137414347535961677173798389971011031071091131271311371391491511571631671731791811911931971992112232272292332392412512572632692712772812832933073113133173313373473493533593673733793833893974014094194214314334394434494574614634674794874914995035095215235415475575635695715775875935996016076136176196316416436476536596616736776836917017097197277337397437517577617697737877978098118218238278298398538578598638778818838879079119199299379419479539679719779839919971009101310191431936117404941729571877755575331917062752829306305198341421305376800954281557410379953262534149212590443063350628712530148541217933209759909975139820841212346188350112608680453894647472456216566674289561525527394398888860917887112180144144965154878409149321280697460295807024856510864232914981820173542223592901476958693572703687098161888680486757805443187028074386001621827485207065876653623459779938558845775617779542038109532989486603799040658192890612331485359615639748042902366550066934348195272617921683

phi = (p-1)*(q-1)
phi = 23571113171923293137414347535961677173798389971011031071091131271311371391491511571631671731791811911931971992112232272292332392412512572632692712772812832933073113133173313373473493533593673733793833893974014094194214314334394434494574614634674794874914995035095215235415475575635695715775875935996016076136176196316416436476536596616736776836917017097197277337397437517577617697737877978098118218238278298398538578598638778818838879079119199299379419479539679719779839919971009101310191431936117392584618254685426261590482309156661588925359344320202269691841154426273240804111376986045417263882159435515330937317990703976520668723882557571941068907066819301369140577316135108867213314922188146144005001487451498465680746704701515697416945681841793205960792297503332969316675351412248595954629993299869345075953072045454514235020825084127759495326364666273888087741455308114883849671982128747023951789949702184251673125608721915152750280970682393543411661671776064918374552966024217175996212487600

d = pow(e, -1, phi)
d = 15714075447948862091609565023974451449198926647340687380727420847540914260994341047754447821194541274621314661408154848194888261608341715088461808515208555288715408755448875582315662355729115822529222595982676062796142876222929622996383076423116529916609996690063476823610317050423797143850583957330677384090784130877610957651024397744491184557944678064798184891598291678385078465158585318732078812158852198932359052399092519212559252719412799532919612986359786479853226613314006067540127621290744928389745503123617507726988206104441059283572896213468179794560769617515493869407584657363611509254772957010220624878660469317680445815921705047960712604711212867579427051544090072578142209948125430762670000991634332310453831136467677131611297121227862137307194865002221979544450234274832397303086662199912896717302048030303009490013883389418506330217576444182592058494303538743255899781321419164682634526633134789501115417072481276768500187313788262362274441114517376612249701977349478117330808325067

cyphertext = 2780321436921227845269766067805604547641764672251687438825498122989499386967784164108893743279610287605669769995594639683212592165536863280639528420328182048065518360606262307313806591343147104009274770408926901136562839153074067955850912830877064811031354484452546219065027914838811744269912371819665118277221

Given to user:
    1) Cypher text (c)
    2) Value of public encryption key (e)
    3) Value of key length (n)

Solution:
    1) Download given file with numbers
    2) Notice that cypher text is significantly smaller than the value of n, and e is tiny, it could mean that (plaintext ^ e) < n.
       If (plaintext ^ e) < n, then since cyphertext = (plaintext ^ n) % n, therefore, cyphertext ^ (1/n) = plaintext
    3) Cuberoot the given cyphertext to obtain decimal value of code, convert decimal to hex and hex to ascii to obtain flag